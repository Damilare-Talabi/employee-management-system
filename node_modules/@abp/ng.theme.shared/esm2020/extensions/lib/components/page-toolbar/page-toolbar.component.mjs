import { ChangeDetectionStrategy, Component, Injector, } from '@angular/core';
import { EXTENSIONS_ACTION_CALLBACK, EXTENSIONS_ACTION_DATA, EXTENSIONS_ACTION_TYPE, } from '../../tokens/extensions.token';
import { AbstractActionsComponent } from '../abstract-actions/abstract-actions.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@abp/ng.core";
export class PageToolbarComponent extends AbstractActionsComponent {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.trackByFn = (_, item) => item.action || item.component;
    }
    createInjector(action) {
        const get = (token, notFoundValue, flags) => {
            return token === EXTENSIONS_ACTION_DATA
                ? this.data
                : token === EXTENSIONS_ACTION_CALLBACK
                    ? (data = this.data) => action.action(data)
                    : this.getInjected.call(this.injector, token, notFoundValue, flags);
        };
        return { get };
    }
}
PageToolbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: PageToolbarComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });
PageToolbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: PageToolbarComponent, selector: "abp-page-toolbar", providers: [
        {
            provide: EXTENSIONS_ACTION_TYPE,
            useValue: 'toolbarActions',
        },
    ], exportAs: ["abpPageToolbar"], usesInheritance: true, ngImport: i0, template: "<div class=\"row justify-content-end mx-0\" id=\"AbpContentToolbar\">\r\n  <div\r\n    class=\"col-auto px-1 pt-0 pt-md-2\"\r\n    [class.pe-0]=\"last\"\r\n    *ngFor=\"let action of actionList; trackBy: trackByFn; let last = last\"\r\n  >\r\n    <ng-container *ngIf=\"action.visible(data)\">\r\n      <ng-container *abpPermission=\"action.permission\">\r\n        <ng-container *ngIf=\"action.component as component; else button\">\r\n          <ng-container\r\n            *ngComponentOutlet=\"component; injector: createInjector(action)\"\r\n          ></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-template #button>\r\n          <button (click)=\"action.action(data)\" type=\"button\" class=\"btn btn-primary btn-sm\">\r\n            <i [ngClass]=\"action.icon\" [class.me-1]=\"action.icon\"></i>\r\n            {{ action.text | abpLocalization }}\r\n          </button>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.PermissionDirective, selector: "[abpPermission]", inputs: ["abpPermission"] }, { type: i1.NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModuleFactory"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "abpLocalization": i2.LocalizationPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: PageToolbarComponent, decorators: [{
            type: Component,
            args: [{ exportAs: 'abpPageToolbar', selector: 'abp-page-toolbar', providers: [
                        {
                            provide: EXTENSIONS_ACTION_TYPE,
                            useValue: 'toolbarActions',
                        },
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"row justify-content-end mx-0\" id=\"AbpContentToolbar\">\r\n  <div\r\n    class=\"col-auto px-1 pt-0 pt-md-2\"\r\n    [class.pe-0]=\"last\"\r\n    *ngFor=\"let action of actionList; trackBy: trackByFn; let last = last\"\r\n  >\r\n    <ng-container *ngIf=\"action.visible(data)\">\r\n      <ng-container *abpPermission=\"action.permission\">\r\n        <ng-container *ngIf=\"action.component as component; else button\">\r\n          <ng-container\r\n            *ngComponentOutlet=\"component; injector: createInjector(action)\"\r\n          ></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-template #button>\r\n          <button (click)=\"action.action(data)\" type=\"button\" class=\"btn btn-primary btn-sm\">\r\n            <i [ngClass]=\"action.icon\" [class.me-1]=\"action.icon\"></i>\r\n            {{ action.text | abpLocalization }}\r\n          </button>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n" }]
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS10b29sYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lLXNoYXJlZC9leHRlbnNpb25zL3NyYy9saWIvY29tcG9uZW50cy9wYWdlLXRvb2xiYXIvcGFnZS10b29sYmFyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lLXNoYXJlZC9leHRlbnNpb25zL3NyYy9saWIvY29tcG9uZW50cy9wYWdlLXRvb2xiYXIvcGFnZS10b29sYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUdULFFBQVEsR0FHVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0wsMEJBQTBCLEVBQzFCLHNCQUFzQixFQUN0QixzQkFBc0IsR0FDdkIsTUFBTSwrQkFBK0IsQ0FBQztBQUN2QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQzs7OztBQWMxRixNQUFNLE9BQU8sb0JBQThCLFNBQVEsd0JBQThDO0lBSS9GLFlBQTZCLFFBQWtCO1FBQzdDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQURXLGFBQVEsR0FBUixRQUFRLENBQVU7UUFIdEMsY0FBUyxHQUF5QyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUNyRSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUM7SUFJaEMsQ0FBQztJQUVELGNBQWMsQ0FBQyxNQUEyQjtRQUN4QyxNQUFNLEdBQUcsR0FBRyxDQUFJLEtBQWtDLEVBQUUsYUFBaUIsRUFBRSxLQUFtQixFQUFFLEVBQUU7WUFDNUYsT0FBTyxLQUFLLEtBQUssc0JBQXNCO2dCQUNyQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUk7Z0JBQ1gsQ0FBQyxDQUFDLEtBQUssS0FBSywwQkFBMEI7b0JBQ3RDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztvQkFDM0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4RSxDQUFDLENBQUM7UUFFRixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7aUhBbEJVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLDJDQVJwQjtRQUNUO1lBQ0UsT0FBTyxFQUFFLHNCQUFzQjtZQUMvQixRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCO0tBQ0YsK0VDMUJILGcrQkF3QkE7MkZES2Esb0JBQW9CO2tCQVpoQyxTQUFTOytCQUNFLGdCQUFnQixZQUNoQixrQkFBa0IsYUFFakI7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLHNCQUFzQjs0QkFDL0IsUUFBUSxFQUFFLGdCQUFnQjt5QkFDM0I7cUJBQ0YsbUJBQ2dCLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENvbXBvbmVudCxcclxuICBJbmplY3RGbGFncyxcclxuICBJbmplY3Rpb25Ub2tlbixcclxuICBJbmplY3RvcixcclxuICBUcmFja0J5RnVuY3Rpb24sXHJcbiAgVHlwZSxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVG9vbGJhckFjdGlvbkxpc3QsIFRvb2xiYXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvdG9vbGJhci1hY3Rpb25zJztcclxuaW1wb3J0IHtcclxuICBFWFRFTlNJT05TX0FDVElPTl9DQUxMQkFDSyxcclxuICBFWFRFTlNJT05TX0FDVElPTl9EQVRBLFxyXG4gIEVYVEVOU0lPTlNfQUNUSU9OX1RZUEUsXHJcbn0gZnJvbSAnLi4vLi4vdG9rZW5zL2V4dGVuc2lvbnMudG9rZW4nO1xyXG5pbXBvcnQgeyBBYnN0cmFjdEFjdGlvbnNDb21wb25lbnQgfSBmcm9tICcuLi9hYnN0cmFjdC1hY3Rpb25zL2Fic3RyYWN0LWFjdGlvbnMuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIGV4cG9ydEFzOiAnYWJwUGFnZVRvb2xiYXInLFxyXG4gIHNlbGVjdG9yOiAnYWJwLXBhZ2UtdG9vbGJhcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3BhZ2UtdG9vbGJhci5jb21wb25lbnQuaHRtbCcsXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIHByb3ZpZGU6IEVYVEVOU0lPTlNfQUNUSU9OX1RZUEUsXHJcbiAgICAgIHVzZVZhbHVlOiAndG9vbGJhckFjdGlvbnMnLFxyXG4gICAgfSxcclxuICBdLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGFnZVRvb2xiYXJDb21wb25lbnQ8UiA9IGFueT4gZXh0ZW5kcyBBYnN0cmFjdEFjdGlvbnNDb21wb25lbnQ8VG9vbGJhckFjdGlvbkxpc3Q8Uj4+IHtcclxuICByZWFkb25seSB0cmFja0J5Rm46IFRyYWNrQnlGdW5jdGlvbjxUb29sYmFyQ29tcG9uZW50PFI+PiA9IChfLCBpdGVtKSA9PlxyXG4gICAgaXRlbS5hY3Rpb24gfHwgaXRlbS5jb21wb25lbnQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICBzdXBlcihpbmplY3Rvcik7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVJbmplY3RvcihhY3Rpb246IFRvb2xiYXJDb21wb25lbnQ8Uj4pOiBJbmplY3RvciB7XHJcbiAgICBjb25zdCBnZXQgPSA8VD4odG9rZW46IFR5cGU8VD4gfCBJbmplY3Rpb25Ub2tlbjxUPiwgbm90Rm91bmRWYWx1ZT86IFQsIGZsYWdzPzogSW5qZWN0RmxhZ3MpID0+IHtcclxuICAgICAgcmV0dXJuIHRva2VuID09PSBFWFRFTlNJT05TX0FDVElPTl9EQVRBXHJcbiAgICAgICAgPyB0aGlzLmRhdGFcclxuICAgICAgICA6IHRva2VuID09PSBFWFRFTlNJT05TX0FDVElPTl9DQUxMQkFDS1xyXG4gICAgICAgID8gKGRhdGEgPSB0aGlzLmRhdGEpID0+IGFjdGlvbi5hY3Rpb24oZGF0YSlcclxuICAgICAgICA6IHRoaXMuZ2V0SW5qZWN0ZWQuY2FsbCh0aGlzLmluamVjdG9yLCB0b2tlbiwgbm90Rm91bmRWYWx1ZSwgZmxhZ3MpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4geyBnZXQgfTtcclxuICB9XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cInJvdyBqdXN0aWZ5LWNvbnRlbnQtZW5kIG14LTBcIiBpZD1cIkFicENvbnRlbnRUb29sYmFyXCI+XHJcbiAgPGRpdlxyXG4gICAgY2xhc3M9XCJjb2wtYXV0byBweC0xIHB0LTAgcHQtbWQtMlwiXHJcbiAgICBbY2xhc3MucGUtMF09XCJsYXN0XCJcclxuICAgICpuZ0Zvcj1cImxldCBhY3Rpb24gb2YgYWN0aW9uTGlzdDsgdHJhY2tCeTogdHJhY2tCeUZuOyBsZXQgbGFzdCA9IGxhc3RcIlxyXG4gID5cclxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJhY3Rpb24udmlzaWJsZShkYXRhKVwiPlxyXG4gICAgICA8bmctY29udGFpbmVyICphYnBQZXJtaXNzaW9uPVwiYWN0aW9uLnBlcm1pc3Npb25cIj5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiYWN0aW9uLmNvbXBvbmVudCBhcyBjb21wb25lbnQ7IGVsc2UgYnV0dG9uXCI+XHJcbiAgICAgICAgICA8bmctY29udGFpbmVyXHJcbiAgICAgICAgICAgICpuZ0NvbXBvbmVudE91dGxldD1cImNvbXBvbmVudDsgaW5qZWN0b3I6IGNyZWF0ZUluamVjdG9yKGFjdGlvbilcIlxyXG4gICAgICAgICAgPjwvbmctY29udGFpbmVyPlxyXG4gICAgICAgIDwvbmctY29udGFpbmVyPlxyXG5cclxuICAgICAgICA8bmctdGVtcGxhdGUgI2J1dHRvbj5cclxuICAgICAgICAgIDxidXR0b24gKGNsaWNrKT1cImFjdGlvbi5hY3Rpb24oZGF0YSlcIiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCI+XHJcbiAgICAgICAgICAgIDxpIFtuZ0NsYXNzXT1cImFjdGlvbi5pY29uXCIgW2NsYXNzLm1lLTFdPVwiYWN0aW9uLmljb25cIj48L2k+XHJcbiAgICAgICAgICAgIHt7IGFjdGlvbi50ZXh0IHwgYWJwTG9jYWxpemF0aW9uIH19XHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19