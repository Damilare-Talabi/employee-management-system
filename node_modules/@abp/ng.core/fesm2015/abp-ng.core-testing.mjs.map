{"version":3,"file":"abp-ng.core-testing.mjs","sources":["../../../../packages/core/testing/src/lib/services/mock-permission.service.ts","../../../../packages/core/testing/src/lib/services/mock-rest.service.ts","../../../../packages/core/testing/src/lib/core-testing.module.ts","../../../../packages/core/testing/src/lib/utils/clear-page.util.ts","../../../../packages/core/testing/src/lib/utils/wait.util.ts","../../../../packages/core/testing/src/abp-ng.core-testing.ts"],"sourcesContent":["import { ConfigStateService, PermissionService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MockPermissionService extends PermissionService {\r\n  constructor(protected configState: ConfigStateService) {\r\n    super(configState);\r\n    this.grantAllPolicies();\r\n  }\r\n\r\n  grantAllPolicies() {\r\n    const grantedPolicies = new Proxy(\r\n      {},\r\n      {\r\n        get() {\r\n          return true;\r\n        },\r\n      },\r\n    );\r\n\r\n    this.configState['store'].deepPatch({ auth: { grantedPolicies } });\r\n  }\r\n\r\n  grantPolicies(keys: string[]) {\r\n    const grantedPolicies = keys.reduce((policies, key) => {\r\n      policies[key] = true;\r\n      return policies;\r\n    }, {});\r\n\r\n    this.configState['store'].deepPatch({ auth: { grantedPolicies } });\r\n  }\r\n}\r\n","import { ABP, CORE_OPTIONS, EnvironmentService, RestService } from '@abp/ng.core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MockRestService extends RestService {\r\n  constructor(\r\n    @Inject(CORE_OPTIONS) protected options: ABP.Root,\r\n    protected http: HttpClient,\r\n    protected environment: EnvironmentService,\r\n  ) {\r\n    super(options, http, environment, null);\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    return throwError(err);\r\n  }\r\n}\r\n","import {\r\n  ABP,\r\n  BaseCoreModule,\r\n  coreOptionsFactory,\r\n  CORE_OPTIONS,\r\n  LIST_QUERY_DEBOUNCE_TIME,\r\n  LOADER_DELAY,\r\n  PermissionService,\r\n  RestService,\r\n} from '@abp/ng.core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { provideRoutes } from '@angular/router';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { MockPermissionService } from './services/mock-permission.service';\r\nimport { MockRestService } from './services/mock-rest.service';\r\n\r\n/**\r\n * CoreTestingModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterTestingModule, BaseCoreModule],\r\n  imports: [NoopAnimationsModule, RouterTestingModule, BaseCoreModule],\r\n})\r\nexport class CoreTestingModule {\r\n  static withConfig(\r\n    { baseHref = '/', listQueryDebounceTime = 0, routes = [], ...options } = {} as ABP.Test,\r\n  ): ModuleWithProviders<CoreTestingModule> {\r\n    return {\r\n      ngModule: CoreTestingModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: 'CORE_OPTIONS',\r\n          useValue: {\r\n            skipGetAppConfiguration: true,\r\n            ...options,\r\n          },\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useFactory: coreOptionsFactory,\r\n          deps: ['CORE_OPTIONS'],\r\n        },\r\n        {\r\n          provide: LIST_QUERY_DEBOUNCE_TIME,\r\n          useValue: listQueryDebounceTime,\r\n        },\r\n        {\r\n          provide: PermissionService,\r\n          useClass: MockPermissionService,\r\n        },\r\n        {\r\n          provide: RestService,\r\n          useClass: MockRestService,\r\n        },\r\n        {\r\n          provide: LOADER_DELAY,\r\n          useValue: 0,\r\n        },\r\n        provideRoutes(routes),\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { ComponentFixture } from '@angular/core/testing';\r\n\r\nexport function clearPage<T extends any>(_fixture: ComponentFixture<T>) {\r\n  if (!document) return;\r\n\r\n  const elements = document.querySelectorAll('body > *');\r\n  elements.forEach(element => {\r\n    if (/^(abp|ngb)-/i.test(element.tagName)) document.body.removeChild(element);\r\n  });\r\n}\r\n","import { ComponentFixture } from '@angular/core/testing';\r\n\r\nexport function wait<T extends any>(fixture: ComponentFixture<T>, timeout = 0) {\r\n  fixture.detectChanges();\r\n  return new Promise(res => setTimeout(res, timeout));\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}