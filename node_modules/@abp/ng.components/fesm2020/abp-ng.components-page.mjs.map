{"version":3,"file":"abp-ng.components-page.mjs","sources":["../../../../packages/components/page/src/page-part.directive.ts","../../../../packages/components/page/src/page-parts.component.ts","../../../../packages/components/page/src/page.component.ts","../../../../packages/components/page/src/page.component.html","../../../../packages/components/page/src/page.module.ts","../../../../packages/components/page/src/abp-ng.components-page.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  Input,\r\n  InjectionToken,\r\n  Optional,\r\n  Inject,\r\n  OnInit,\r\n  OnDestroy,\r\n  Injector,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  SimpleChange,\r\n} from '@angular/core';\r\nimport { Observable, Subscription, of } from 'rxjs';\r\n\r\nexport interface PageRenderStrategy {\r\n  shouldRender(type?: string): boolean | Observable<boolean>;\r\n  onInit?(type?: string, injector?: Injector, context?: any): void;\r\n  onDestroy?(type?: string, injector?: Injector, context?: any): void;\r\n  onContextUpdate?(change?: SimpleChange): void;\r\n}\r\n\r\nexport const PAGE_RENDER_STRATEGY = new InjectionToken<PageRenderStrategy>('PAGE_RENDER_STRATEGY');\r\n\r\n@Directive({ selector: '[abpPagePart]' })\r\nexport class PagePartDirective implements OnInit, OnDestroy, OnChanges {\r\n  hasRendered = false;\r\n  type: string;\r\n  subscription: Subscription;\r\n\r\n  @Input('abpPagePartContext') context: any;\r\n  @Input() set abpPagePart(type: string) {\r\n    this.type = type;\r\n    this.createRenderStream(type);\r\n  }\r\n\r\n  render = (shouldRender: boolean) => {\r\n    if (shouldRender && !this.hasRendered) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n      this.hasRendered = true;\r\n    } else if (!shouldRender && this.hasRendered) {\r\n      this.viewContainer.clear();\r\n      this.hasRendered = false;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() @Inject(PAGE_RENDER_STRATEGY) private renderLogic: PageRenderStrategy,\r\n    private injector: Injector,\r\n  ) {}\r\n\r\n  ngOnChanges({ context }: SimpleChanges): void {\r\n    if (this.renderLogic?.onContextUpdate) {\r\n      this.renderLogic.onContextUpdate(context);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.renderLogic?.onInit) {\r\n      this.renderLogic.onInit(this.type, this.injector, this.context);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearSubscription();\r\n\r\n    if (this.renderLogic?.onDestroy) {\r\n      this.renderLogic.onDestroy(this.type, this.injector, this.context);\r\n    }\r\n  }\r\n\r\n  shouldRender(type: string) {\r\n    if (this.renderLogic) {\r\n      const willRender = this.renderLogic.shouldRender(type);\r\n      return willRender instanceof Observable ? willRender : of(willRender);\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  protected createRenderStream(type: string) {\r\n    this.clearSubscription();\r\n\r\n    this.subscription = this.shouldRender(type).subscribe(this.render);\r\n  }\r\n\r\n  protected clearSubscription() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\nexport enum PageParts {\r\n  title = 'PageTitleContainerComponent',\r\n  breadcrumb = 'PageBreadcrumbContainerComponent',\r\n  toolbar = 'PageToolbarContainerComponent',\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-page-title-container',\r\n  template: ` <ng-content></ng-content> `,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PageTitleContainerComponent {}\r\n\r\n@Component({\r\n  selector: 'abp-page-breadcrumb-container',\r\n  template: ` <ng-content></ng-content> `,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PageBreadcrumbContainerComponent {}\r\n\r\n@Component({\r\n  selector: 'abp-page-toolbar-container',\r\n  template: ` <ng-content></ng-content> `,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PageToolbarContainerComponent {}\r\n","import { Component, Input, ViewEncapsulation, ContentChild } from '@angular/core';\r\nimport {\r\n  PageTitleContainerComponent,\r\n  PageBreadcrumbContainerComponent,\r\n  PageToolbarContainerComponent,\r\n  PageParts,\r\n} from './page-parts.component';\r\n\r\n@Component({\r\n  selector: 'abp-page',\r\n  templateUrl: './page.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PageComponent {\r\n  @Input() title: string;\r\n\r\n  toolbarVisible = false;\r\n  _toolbarData: any;\r\n  @Input('toolbar') set toolbarData(val: any) {\r\n    this._toolbarData = val;\r\n    this.toolbarVisible = true;\r\n  }\r\n\r\n  get toolbarData() {\r\n    return this._toolbarData;\r\n  }\r\n\r\n  @Input('breadcrumb') breadcrumbVisible = true;\r\n\r\n  pageParts = {\r\n    title: PageParts.title,\r\n    breadcrumb: PageParts.breadcrumb,\r\n    toolbar: PageParts.toolbar,\r\n  };\r\n\r\n  @ContentChild(PageTitleContainerComponent) customTitle: PageTitleContainerComponent;\r\n  @ContentChild(PageBreadcrumbContainerComponent)\r\n  customBreadcrumb: PageBreadcrumbContainerComponent;\r\n  @ContentChild(PageToolbarContainerComponent) customToolbar: PageToolbarContainerComponent;\r\n\r\n  get shouldRenderRow() {\r\n    return !!(\r\n      this.title ||\r\n      this.toolbarVisible ||\r\n      this.breadcrumbVisible ||\r\n      this.customTitle ||\r\n      this.customBreadcrumb ||\r\n      this.customToolbar\r\n    );\r\n  }\r\n}\r\n","<div class=\"row entry-row\" *ngIf=\"shouldRenderRow\">\r\n  <ng-container *ngIf=\"customTitle; else defaultTitleTemplate\">\r\n    <ng-content select=\"abp-page-title-container\"></ng-content>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"customBreadcrumb; else defaultBreadcrumbTemplate\">\r\n    <ng-content select=\"abp-page-breadcrumb-container\"></ng-content>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"customToolbar; else defaultPageToolbarTemplate\">\r\n    <ng-content select=\"abp-page-toolbar-container\"></ng-content>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-content></ng-content>\r\n\r\n<ng-template #defaultTitleTemplate>\r\n  <ng-container *ngIf=\"title\">\r\n    <div class=\"col-auto\" *abpPagePart=\"pageParts.title\">\r\n      <h1 class=\"content-header-title\">\r\n        {{ title }}\r\n      </h1>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #defaultBreadcrumbTemplate>\r\n  <ng-container *ngIf=\"breadcrumbVisible\">\r\n    <div class=\"col-lg-auto ps-lg-0\" *abpPagePart=\"pageParts.breadcrumb\">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #defaultPageToolbarTemplate>\r\n  <ng-container *ngIf=\"toolbarVisible\">\r\n    <div class=\"col\" *abpPagePart=\"pageParts.toolbar; context: toolbarData\">\r\n      <abp-page-toolbar [record]=\"toolbarData\"></abp-page-toolbar>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PagePartDirective } from './page-part.directive';\r\nimport {\r\n  PageBreadcrumbContainerComponent,\r\n  PageTitleContainerComponent,\r\n  PageToolbarContainerComponent,\r\n} from './page-parts.component';\r\nimport { PageComponent } from './page.component';\r\n\r\nconst exportedDeclarations = [\r\n  PageComponent,\r\n  PageTitleContainerComponent,\r\n  PageBreadcrumbContainerComponent,\r\n  PageToolbarContainerComponent,\r\n  PagePartDirective,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...exportedDeclarations],\r\n  imports: [CommonModule, UiExtensionsModule, CoreModule, ThemeSharedModule],\r\n  exports: [...exportedDeclarations, UiExtensionsModule],\r\n})\r\nexport class PageModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}