{"version":3,"file":"abp-ng.identity-proxy.mjs","sources":["../../../../packages/identity/proxy/src/lib/proxy/identity/identity-role.service.ts","../../../../packages/identity/proxy/src/lib/proxy/identity/identity-user-lookup.service.ts","../../../../packages/identity/proxy/src/lib/proxy/identity/identity-user.service.ts","../../../../packages/identity/proxy/src/abp-ng.identity-proxy.ts"],"sourcesContent":["import type { GetIdentityRolesInput, IdentityRoleCreateDto, IdentityRoleDto, IdentityRoleUpdateDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityRoleService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  create = (input: IdentityRoleCreateDto) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getAllList = () =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/roles/all',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: GetIdentityRolesInput) =>\r\n    this.restService.request<any, PagedResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: IdentityRoleUpdateDto) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'PUT',\r\n      url: `/api/identity/roles/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { UserLookupCountInputDto, UserLookupSearchInputDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { UserData } from '../users/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityUserLookupService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  findById = (id: string) =>\r\n    this.restService.request<any, UserData>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/lookup/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByUserName = (userName: string) =>\r\n    this.restService.request<any, UserData>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/lookup/by-username/${userName}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getCount = (input: UserLookupCountInputDto) =>\r\n    this.restService.request<any, number>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/lookup/count',\r\n      params: { filter: input.filter },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  search = (input: UserLookupSearchInputDto) =>\r\n    this.restService.request<any, ListResultDto<UserData>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/lookup/search',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { GetIdentityUsersInput, IdentityRoleDto, IdentityUserCreateDto, IdentityUserDto, IdentityUserUpdateDto, IdentityUserUpdateRolesDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityUserService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  create = (input: IdentityUserCreateDto) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByEmail = (email: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/by-email/${email}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByUsername = (userName: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/by-username/${userName}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getAssignableRoles = () =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/assignable-roles',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: GetIdentityUsersInput) =>\r\n    this.restService.request<any, PagedResultDto<IdentityUserDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getRoles = (id: string) =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: IdentityUserUpdateDto) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'PUT',\r\n      url: `/api/identity/users/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateRoles = (id: string, input: IdentityUserUpdateRolesDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/identity/users/${id}/roles`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}