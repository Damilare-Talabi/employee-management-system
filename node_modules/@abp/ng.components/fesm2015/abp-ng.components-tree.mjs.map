{"version":3,"file":"abp-ng.components-tree.mjs","sources":["../../../../packages/components/tree/src/lib/templates/tree-node-template.directive.ts","../../../../packages/components/tree/src/lib/templates/expanded-icon-template.directive.ts","../../../../packages/components/tree/src/lib/components/tree.component.ts","../../../../packages/components/tree/src/lib/components/tree.component.html","../../../../packages/components/tree/src/lib/tree.module.ts","../../../../packages/components/tree/src/lib/utils/nz-tree-adapter.ts","../../../../packages/components/tree/src/abp-ng.components-tree.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpTreeNodeTemplate],[abp-tree-node-template]',\r\n})\r\nexport class TreeNodeTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpTreeExpandedIconTemplate],[abp-tree-expanded-icon-template]',\r\n})\r\nexport class ExpandedIconTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { NzFormatEmitEvent, NzFormatBeforeDropEvent } from 'ng-zorro-antd/tree';\r\nimport { of } from 'rxjs';\r\nimport { TreeNodeTemplateDirective } from '../templates/tree-node-template.directive';\r\nimport { ExpandedIconTemplateDirective } from '../templates/expanded-icon-template.directive';\r\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport type DropEvent = NzFormatEmitEvent & { pos: number };\r\n\r\n@Component({\r\n  selector: 'abp-tree',\r\n  templateUrl: 'tree.component.html',\r\n  styleUrls: [\r\n    '../../../../../../node_modules/ng-zorro-antd/tree/style/index.min.css',\r\n    'tree.component.scss',\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TreeComponent {\r\n  dropPosition: number;\r\n\r\n  dropdowns = {} as { [key: string]: NgbDropdown };\r\n\r\n  @ContentChild('menu') menu: TemplateRef<any>;\r\n  @ContentChild(TreeNodeTemplateDirective) customNodeTemplate: TreeNodeTemplateDirective;\r\n  @ContentChild(ExpandedIconTemplateDirective) expandedIconTemplate: ExpandedIconTemplateDirective;\r\n  @Output() readonly checkedKeysChange = new EventEmitter();\r\n  @Output() readonly expandedKeysChange = new EventEmitter<string[]>();\r\n  @Output() readonly selectedNodeChange = new EventEmitter();\r\n  @Output() readonly dropOver = new EventEmitter<DropEvent>();\r\n  @Input() noAnimation = true;\r\n  @Input() draggable: boolean;\r\n  @Input() checkable: boolean;\r\n  @Input() checkStrictly: boolean;\r\n  @Input() checkedKeys = [];\r\n  @Input() nodes = [];\r\n  @Input() expandedKeys: string[] = [];\r\n  @Input() selectedNode: any;\r\n  @Input() isNodeSelected = node => this.selectedNode?.id === node.key;\r\n  @Input() beforeDrop = (event: NzFormatBeforeDropEvent) => {\r\n    this.dropPosition = event.pos;\r\n    return of(false);\r\n  };\r\n\r\n  onSelectedNodeChange(node) {\r\n    this.selectedNode = node.origin.entity;\r\n    this.selectedNodeChange.emit(node.origin.entity);\r\n  }\r\n\r\n  onCheckboxChange(event) {\r\n    this.checkedKeys = [...event.keys];\r\n    this.checkedKeysChange.emit(event.keys);\r\n  }\r\n\r\n  onExpandedKeysChange(event) {\r\n    this.expandedKeys = [...event.keys];\r\n    this.expandedKeysChange.emit(event.keys);\r\n  }\r\n\r\n  onDrop(event: DropEvent) {\r\n    event.event.stopPropagation();\r\n    event.event.preventDefault();\r\n    event.pos = this.dropPosition;\r\n\r\n    this.dropOver.emit(event);\r\n  }\r\n\r\n  initDropdown(key: string, dropdown: NgbDropdown) {\r\n    this.dropdowns[key] = dropdown;\r\n  }\r\n}\r\n","<nz-tree\r\n  [nzBeforeDrop]=\"beforeDrop\"\r\n  [nzDraggable]=\"draggable\"\r\n  [nzCheckStrictly]=\"checkStrictly\"\r\n  [nzCheckable]=\"checkable\"\r\n  [nzCheckedKeys]=\"checkedKeys\"\r\n  [nzData]=\"nodes\"\r\n  [nzTreeTemplate]=\"treeTemplate\"\r\n  [nzExpandedKeys]=\"expandedKeys\"\r\n  [nzExpandedIcon]=\"expandedIconTemplate?.template || defaultIconTemplate\"\r\n  (nzExpandChange)=\"onExpandedKeysChange($event)\"\r\n  (nzCheckBoxChange)=\"onCheckboxChange($event)\"\r\n  (nzOnDrop)=\"onDrop($event)\"\r\n  [nzNoAnimation]=\"noAnimation\"\r\n  (nzContextMenu)=\"dropdowns[$event.node?.key]?.toggle()\"\r\n></nz-tree>\r\n<ng-template #treeTemplate let-node>\r\n  <div\r\n    class=\"node-wrapper\"\r\n    [class.selected]=\"isNodeSelected(node)\"\r\n    [title]=\"node.title\"\r\n    (click)=\"onSelectedNodeChange(node)\"\r\n  >\r\n    <ng-container *ngTemplateOutlet=\"nodeTemplate; context: { $implicit: node }\"></ng-container>\r\n\r\n    <ng-template #nodeTemplate let-node>\r\n      <div class=\"d-inline-block\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            customNodeTemplate ? customNodeTemplate?.template : defaultNodeTemplate;\r\n            context: { $implicit: node }\r\n          \"\r\n        ></ng-container>\r\n      </div>\r\n\r\n      <div\r\n        #dropdown=\"ngbDropdown\"\r\n        *ngIf=\"menu\"\r\n        class=\"d-inline-block ms-1\"\r\n        ngbDropdown\r\n        placement=\"bottom\"\r\n        container=\"body\"\r\n        (abpInit)=\"initDropdown(node.key, dropdown)\"\r\n      >\r\n        <i\r\n          class=\"fas fa-caret-down text-muted\"\r\n          ngbDropdownToggle\r\n          [class.dropdown-toggle]=\"false\"\r\n        ></i>\r\n        <div ngbDropdownMenu>\r\n          <ng-template *ngTemplateOutlet=\"menu; context: { $implicit: node }\"></ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #defaultNodeTemplate let-node>\r\n      <span>{{ node.title }}</span>\r\n    </ng-template>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #defaultIconTemplate let-node let-origin=\"origin\">\r\n  <i style=\"line-height: 28px\" aria-hidden=\"true\">\r\n    <ng-container *ngTemplateOutlet=\"node.isExpanded ? minusIcon : plusIcon\"></ng-container\r\n  ></i>\r\n</ng-template>\r\n\r\n<ng-template #minusIcon>\r\n  <svg\r\n    width=\"15\"\r\n    height=\"15\"\r\n    viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill-rule=\"evenodd\"\r\n    clip-rule=\"evenodd\"\r\n  >\r\n    <path\r\n      d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm-6.5 10h13v1h-13v-1z\"\r\n    />\r\n  </svg>\r\n</ng-template>\r\n\r\n<ng-template #plusIcon>\r\n  <svg\r\n    width=\"15\"\r\n    height=\"15\"\r\n    viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    fill-rule=\"evenodd\"\r\n    clip-rule=\"evenodd\"\r\n  >\r\n    <path\r\n      d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"\r\n    />\r\n  </svg>\r\n</ng-template>\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\r\nimport { TreeComponent } from './components/tree.component';\r\nimport { ExpandedIconTemplateDirective } from './templates/expanded-icon-template.directive';\r\nimport { TreeNodeTemplateDirective } from './templates/tree-node-template.directive';\r\n\r\nconst templates = [TreeNodeTemplateDirective, ExpandedIconTemplateDirective];\r\n\r\nconst exported = [...templates, TreeComponent];\r\n\r\n@NgModule({\r\n  imports: [CoreModule, NzTreeModule, NgbDropdownModule, NzNoAnimationModule],\r\n  exports: [...exported],\r\n  declarations: [...exported],\r\n})\r\nexport class TreeModule {}\r\n","export abstract class BaseNode {\r\n  name?: string;\r\n  displayName?: string;\r\n\r\n  constructor(public id: string, public parentId: string | null) {}\r\n}\r\n\r\nclass TreeNode<T extends BaseNode> extends BaseNode {\r\n  title: string | undefined;\r\n  key: string;\r\n  icon: string | null = null;\r\n  children: TreeNode<T>[] = [];\r\n  isLeaf = true;\r\n  checked = false;\r\n  selected = false;\r\n  expanded = false;\r\n  selectable = true;\r\n  disabled = false;\r\n  disableCheckbox = false;\r\n  parentNode?: TreeNode<T> | null;\r\n\r\n  constructor(public entity: T, private nameResolver = ent => ent.displayName || ent.name) {\r\n    super(entity.id, entity.parentId);\r\n    this.key = entity.id;\r\n    this.title = nameResolver(entity);\r\n  }\r\n}\r\n\r\nexport class TreeAdapter<T extends BaseNode = BaseNode> {\r\n  private tree: TreeNode<T>[];\r\n\r\n  constructor(private list: T[] = []) {\r\n    this.tree = createTreeFromList(this.list);\r\n  }\r\n\r\n  getList() {\r\n    return this.list;\r\n  }\r\n\r\n  getTree() {\r\n    return this.tree;\r\n  }\r\n\r\n  handleDrop({ key, parentNode }: TreeNode<T>) {\r\n    const index = this.list.findIndex(({ id }) => id === key);\r\n    this.list[index].parentId = parentNode ? parentNode.key : null;\r\n    this.tree = createTreeFromList(this.list);\r\n  }\r\n\r\n  handleRemove({ key }: TreeNode<T>) {\r\n    this.updateTreeFromList(this.list.filter(item => item.id !== key));\r\n  }\r\n\r\n  handleUpdate({ key, children }: { key: string; children: T[] }) {\r\n    /**\r\n     * When we need to update a node with new children, first we need to remove any descendant nodes.\r\n     * If we remove immediate children and create a new tree, any other descendant nodes will be removed\r\n     * and we won't need to recursively remove sub children.\r\n     * Then, you simply add back the new children and create a new tree.\r\n     */\r\n    const listWithDescendantNodesRemoved = this.updateTreeFromList(\r\n      this.list.filter(item => item.parentId !== key),\r\n    );\r\n    this.updateTreeFromList(listWithDescendantNodesRemoved.concat(children));\r\n  }\r\n\r\n  updateTreeFromList(list: T[]) {\r\n    this.tree = createTreeFromList(list);\r\n    this.list = createListFromTree(this.tree);\r\n    return this.list;\r\n  }\r\n}\r\n\r\n// UTILITY FUNCTIONS\r\n\r\nfunction createTreeFromList<T extends BaseNode>(list: T[]): TreeNode<T>[] {\r\n  const map = createMapFromList(list);\r\n  const tree: TreeNode<T>[] = [];\r\n\r\n  list.forEach(row => {\r\n    const parentId = row.parentId;\r\n    const node = map.get(row.id);\r\n    if (parentId) {\r\n      const parent = map.get(parentId);\r\n      if (!parent) return;\r\n      parent.children.push(node);\r\n      parent.isLeaf = false;\r\n    } else {\r\n      tree.push(node);\r\n    }\r\n  });\r\n\r\n  return tree;\r\n}\r\n\r\nfunction createListFromTree<T extends BaseNode>(tree: TreeNode<T>[], list: T[] = []): T[] {\r\n  tree.forEach(node => {\r\n    list.push({ ...node.entity, parentId: node.parentId });\r\n    if (node.children) createListFromTree(node.children, list);\r\n  });\r\n\r\n  return list;\r\n}\r\n\r\nfunction createMapFromList<T extends BaseNode>(\r\n  list: T[],\r\n  map = new Map<string, TreeNode<T>>(),\r\n): Map<string, TreeNode<T>> {\r\n  list.forEach(row => map.set(row.id, new TreeNode(row)));\r\n\r\n  return map;\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}