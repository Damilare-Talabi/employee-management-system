{"version":3,"file":"abp-ng.tenant-management.mjs","sources":["../../../../packages/tenant-management/src/lib/components/tenants/tenants.component.ts","../../../../packages/tenant-management/src/lib/components/tenants/tenants.component.html","../../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-actions.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-props.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-form-props.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-toolbar-actions.ts","../../../../packages/tenant-management/src/lib/tokens/extensions.token.ts","../../../../packages/tenant-management/src/lib/guards/extensions.guard.ts","../../../../packages/tenant-management/src/lib/tenant-management-routing.module.ts","../../../../packages/tenant-management/src/lib/tenant-management.module.ts","../../../../packages/tenant-management/src/abp-ng.tenant-management.ts"],"sourcesContent":["import { ListService, PagedResultDto } from '@abp/ng.core';\r\nimport { eFeatureManagementComponents } from '@abp/ng.feature-management';\r\nimport { GetTenantsInput, TenantDto, TenantService } from '@abp/ng.tenant-management/proxy';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER,\r\n  FormPropData,\r\n  generateFormFromProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { Component, Injector, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { eTenantManagementComponents } from '../../enums/components';\r\n\r\n@Component({\r\n  selector: 'abp-tenants',\r\n  templateUrl: './tenants.component.html',\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eTenantManagementComponents.Tenants,\r\n    },\r\n  ],\r\n})\r\nexport class TenantsComponent implements OnInit {\r\n  data: PagedResultDto<TenantDto> = { items: [], totalCount: 0 };\r\n\r\n  selected!: TenantDto;\r\n\r\n  tenantForm!: FormGroup;\r\n\r\n  isModalVisible!: boolean;\r\n\r\n  visibleFeatures = false;\r\n\r\n  providerKey!: string;\r\n\r\n  modalBusy = false;\r\n\r\n  featureManagementKey = eFeatureManagementComponents.FeatureManagement;\r\n\r\n  get hasSelectedTenant(): boolean {\r\n    return Boolean(this.selected.id);\r\n  }\r\n\r\n  onVisibleFeaturesChange = (value: boolean) => {\r\n    this.visibleFeatures = value;\r\n  };\r\n\r\n  constructor(\r\n    public readonly list: ListService<GetTenantsInput>,\r\n    private injector: Injector,\r\n    private confirmationService: ConfirmationService,\r\n    private service: TenantService,\r\n    private fb: FormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  private createTenantForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.tenantForm = generateFormFromProps(data);\r\n  }\r\n\r\n  addTenant() {\r\n    this.selected = {} as TenantDto;\r\n    this.createTenantForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  editTenant(id: string) {\r\n    this.service.get(id).subscribe(res => {\r\n      this.selected = res;\r\n      this.createTenantForm();\r\n      this.isModalVisible = true;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (!this.tenantForm.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { id } = this.selected;\r\n\r\n    (id\r\n      ? this.service.update(id, { ...this.selected, ...this.tenantForm.value })\r\n      : this.service.create(this.tenantForm.value)\r\n    )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn(\r\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\r\n        'AbpTenantManagement::AreYouSure',\r\n        {\r\n          messageLocalizationParams: [name],\r\n        },\r\n      )\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.service.delete(id).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  hookToQuery() {\r\n    this.list\r\n      .hookToQuery(query => this.service.getList(query))\r\n      .subscribe(res => {\r\n        this.data = res;\r\n      });\r\n  }\r\n\r\n  onSharedDatabaseChange(value: boolean) {\r\n    if (!value) {\r\n      setTimeout(() => {\r\n        const defaultConnectionString = document.getElementById(\r\n          'defaultConnectionString',\r\n        ) as HTMLInputElement;\r\n        if (defaultConnectionString) {\r\n          defaultConnectionString.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  openFeaturesModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visibleFeatures = true;\r\n    }, 0);\r\n  }\r\n\r\n  sort(data: any) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n}\r\n","<div id=\"wrapper\" class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col col-md-6\">\r\n        <h5 class=\"card-title\">{{ 'AbpTenantManagement::Tenants' | abpLocalization }}</h5>\r\n      </div>\r\n      <div class=\"text-end col col-md-6\">\r\n        <abp-page-toolbar [record]=\"data.items\"></abp-page-toolbar>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <div id=\"data-tables-table-filter\" class=\"data-tables-filter\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          type=\"search\"\r\n          class=\"form-control\"\r\n          [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\r\n          [(ngModel)]=\"list.filter\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <abp-extensible-table\r\n      [data]=\"data.items || []\"\r\n      [recordsTotal]=\"data.totalCount || 0\"\r\n      [list]=\"list\"\r\n    ></abp-extensible-table>\r\n  </div>\r\n</div>\r\n\r\n<abp-modal [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h3>\r\n      {{\r\n        (selected?.id ? 'AbpTenantManagement::Edit' : 'AbpTenantManagement::NewTenant')\r\n          | abpLocalization\r\n      }}\r\n    </h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]=\"tenantForm\" (ngSubmit)=\"save()\" [validateOnSubmit]=\"true\">\r\n      <abp-extensible-form [selectedRecord]=\"selected\"></abp-extensible-form>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button abpClose type=\"button\" class=\"btn btn-secondary\">\r\n      {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"save()\" [disabled]=\"tenantForm?.invalid\">{{\r\n      'AbpTenantManagement::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-feature-management\r\n  *abpReplaceableTemplate=\"{\r\n    inputs: {\r\n      providerName: { value: 'T' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visibleFeatures, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: $any(onVisibleFeaturesChange) },\r\n    componentKey: featureManagementKey\r\n  }\"\r\n  [(visible)]=\"visibleFeatures\"\r\n  providerName=\"T\"\r\n  [providerKey]=\"providerKey\"\r\n>\r\n</abp-feature-management>\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { EntityAction } from '@abp/ng.theme.shared/extensions';\r\nimport { TenantsComponent } from '../components/tenants/tenants.component';\r\n\r\nexport const DEFAULT_TENANTS_ENTITY_ACTIONS = EntityAction.createMany<TenantDto>([\r\n  {\r\n    text: 'AbpTenantManagement::Edit',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.editTenant(data.record.id);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Update',\r\n  },\r\n  {\r\n    text: 'AbpTenantManagement::Permission:ManageFeatures',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.openFeaturesModal(data.record.id);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.ManageFeatures',\r\n  },\r\n  {\r\n    text: 'AbpTenantManagement::Delete',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.delete(data.record.id, data.record.name);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Delete',\r\n  },\r\n]);\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\r\n\r\nexport const DEFAULT_TENANTS_ENTITY_PROPS = EntityProp.createMany<TenantDto>([\r\n  {\r\n    type: ePropType.String,\r\n    name: 'name',\r\n    displayName: 'AbpTenantManagement::TenantName',\r\n    sortable: true,\r\n  },\r\n]);\r\n","import { TenantCreateDto, TenantUpdateDto } from '@abp/ng.tenant-management/proxy';\r\nimport { getPasswordValidators } from '@abp/ng.theme.shared';\r\nimport { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\r\nimport { Validators } from '@angular/forms';\r\n\r\nexport const DEFAULT_TENANTS_CREATE_FORM_PROPS = FormProp.createMany<\r\n  TenantCreateDto | TenantUpdateDto\r\n>([\r\n  {\r\n    type: ePropType.String,\r\n    name: 'name',\r\n    id: 'name',\r\n    displayName: 'AbpTenantManagement::TenantName',\r\n    validators: () => [Validators.required, Validators.maxLength(256)],\r\n  },\r\n  {\r\n    type: ePropType.Email,\r\n    name: 'adminEmailAddress',\r\n    displayName: 'AbpTenantManagement::DisplayName:AdminEmailAddress',\r\n    id: 'admin-email-address',\r\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\r\n  },\r\n  {\r\n    type: ePropType.Password,\r\n    name: 'adminPassword',\r\n    displayName: 'AbpTenantManagement::DisplayName:AdminPassword',\r\n    id: 'admin-password',\r\n    autocomplete: 'new-password',\r\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\r\n  },\r\n]);\r\n\r\nexport const DEFAULT_TENANTS_EDIT_FORM_PROPS = DEFAULT_TENANTS_CREATE_FORM_PROPS.slice(0, 1);\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { ToolbarAction } from '@abp/ng.theme.shared/extensions';\r\nimport { TenantsComponent } from '../components/tenants/tenants.component';\r\n\r\nexport const DEFAULT_TENANTS_TOOLBAR_ACTIONS = ToolbarAction.createMany<TenantDto[]>([\r\n  {\r\n    text: 'AbpTenantManagement::ManageHostFeatures',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.openFeaturesModal('');\r\n    },\r\n    permission: 'FeatureManagement.ManageHostFeatures',\r\n    icon: 'fa fa-cog',\r\n  },\r\n  {\r\n    text: 'AbpTenantManagement::NewTenant',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.addTenant();\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { TenantCreateDto, TenantDto, TenantUpdateDto } from '@abp/ng.tenant-management/proxy';\r\nimport {\r\n  CreateFormPropContributorCallback,\r\n  EditFormPropContributorCallback,\r\n  EntityActionContributorCallback,\r\n  EntityPropContributorCallback,\r\n  ToolbarActionContributorCallback,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { DEFAULT_TENANTS_ENTITY_ACTIONS } from '../defaults/default-tenants-entity-actions';\r\nimport { DEFAULT_TENANTS_ENTITY_PROPS } from '../defaults/default-tenants-entity-props';\r\nimport {\r\n  DEFAULT_TENANTS_CREATE_FORM_PROPS,\r\n  DEFAULT_TENANTS_EDIT_FORM_PROPS,\r\n} from '../defaults/default-tenants-form-props';\r\nimport { DEFAULT_TENANTS_TOOLBAR_ACTIONS } from '../defaults/default-tenants-toolbar-actions';\r\nimport { eTenantManagementComponents } from '../enums/components';\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_ACTIONS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_TOOLBAR_ACTIONS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_PROPS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_CREATE_FORM_PROPS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_EDIT_FORM_PROPS,\r\n};\r\n\r\nexport const TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS =\r\n  new InjectionToken<EntityActionContributors>('TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS =\r\n  new InjectionToken<ToolbarActionContributors>('TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS =\r\n  new InjectionToken<EntityPropContributors>('TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS =\r\n  new InjectionToken<CreateFormPropContributors>('TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS =\r\n  new InjectionToken<EditFormPropContributors>('TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS');\r\n\r\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\r\ntype EntityActionContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EntityActionContributorCallback<TenantDto>[];\r\n}>;\r\ntype ToolbarActionContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: ToolbarActionContributorCallback<TenantDto[]>[];\r\n}>;\r\ntype EntityPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EntityPropContributorCallback<TenantDto>[];\r\n}>;\r\ntype CreateFormPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: CreateFormPropContributorCallback<TenantCreateDto>[];\r\n}>;\r\ntype EditFormPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EditFormPropContributorCallback<TenantUpdateDto>[];\r\n}>;\r\n","import { ConfigStateService } from '@abp/ng.core';\r\nimport {\r\n  ExtensionsService,\r\n  getObjectExtensionEntitiesFromStore,\r\n  mapEntitiesToContributors,\r\n  mergeWithDefaultActions,\r\n  mergeWithDefaultProps,\r\n} from '@abp/ng.theme.shared/extensions';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, mapTo, tap } from 'rxjs/operators';\r\nimport { eTenantManagementComponents } from '../enums/components';\r\nimport {\r\n  TenantManagementCreateFormPropContributors,\r\n  TenantManagementEditFormPropContributors,\r\n  TenantManagementEntityActionContributors,\r\n  TenantManagementEntityPropContributors,\r\n  TenantManagementToolbarActionContributors,\r\n} from '../models/config-options';\r\nimport {\r\n  DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n} from '../tokens/extensions.token';\r\n\r\n@Injectable()\r\nexport class TenantManagementExtensionsGuard implements CanActivate {\r\n  constructor(private injector: Injector) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    const extensions: ExtensionsService = this.injector.get(ExtensionsService);\r\n    const actionContributors: TenantManagementEntityActionContributors =\r\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, null) || {};\r\n    const toolbarContributors: TenantManagementToolbarActionContributors =\r\n      this.injector.get(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};\r\n    const propContributors: TenantManagementEntityPropContributors =\r\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, null) || {};\r\n    const createFormContributors: TenantManagementCreateFormPropContributors =\r\n      this.injector.get(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};\r\n    const editFormContributors: TenantManagementEditFormPropContributors =\r\n      this.injector.get(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};\r\n\r\n    const configState = this.injector.get(ConfigStateService);\r\n    return getObjectExtensionEntitiesFromStore(configState, 'TenantManagement').pipe(\r\n      map(entities => ({\r\n        [eTenantManagementComponents.Tenants]: entities.Tenant,\r\n      })),\r\n      mapEntitiesToContributors(configState, 'TenantManagement'),\r\n      tap(objectExtensionContributors => {\r\n        mergeWithDefaultActions(\r\n          extensions.entityActions,\r\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n          actionContributors,\r\n        );\r\n        mergeWithDefaultActions(\r\n          extensions.toolbarActions,\r\n          DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n          toolbarContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          extensions.entityProps,\r\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n          objectExtensionContributors.prop,\r\n          propContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          extensions.createFormProps,\r\n          DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n          objectExtensionContributors.createForm,\r\n          createFormContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          extensions.editFormProps,\r\n          DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n          objectExtensionContributors.editForm,\r\n          editFormContributors,\r\n        );\r\n      }),\r\n      mapTo(true),\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  PermissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n  RouterOutletComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { eTenantManagementComponents } from './enums/components';\r\nimport { TenantManagementExtensionsGuard } from './guards';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: RouterOutletComponent,\r\n    canActivate: [AuthGuard, PermissionGuard, TenantManagementExtensionsGuard],\r\n    children: [\r\n      {\r\n        path: 'tenants',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpTenantManagement.Tenants',\r\n          replaceableComponent: {\r\n            key: eTenantManagementComponents.Tenants,\r\n            defaultComponent: TenantsComponent,\r\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TenantManagementRoutingModule {}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { TenantManagementExtensionsGuard } from './guards/extensions.guard';\r\nimport { TenantManagementConfigOptions } from './models/config-options';\r\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\r\nimport {\r\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n} from './tokens/extensions.token';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  exports: [TenantsComponent],\r\n  imports: [\r\n    TenantManagementRoutingModule,\r\n    NgxValidateCoreModule,\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    FeatureManagementModule,\r\n    UiExtensionsModule,\r\n  ],\r\n})\r\nexport class TenantManagementModule {\r\n  static forChild(\r\n    options: TenantManagementConfigOptions = {},\r\n  ): ModuleWithProviders<TenantManagementModule> {\r\n    return {\r\n      ngModule: TenantManagementModule,\r\n      providers: [\r\n        {\r\n          provide: TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n          useValue: options.entityActionContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n          useValue: options.toolbarActionContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n          useValue: options.entityPropContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n          useValue: options.createFormPropContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n          useValue: options.editFormPropContributors,\r\n        },\r\n        TenantManagementExtensionsGuard,\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forLazy(\r\n    options: TenantManagementConfigOptions = {},\r\n  ): NgModuleFactory<TenantManagementModule> {\r\n    return new LazyModuleFactory(TenantManagementModule.forChild(options));\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}